{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\double-parker\\\\src\\\\components\\\\QRCodeScanner.js\",\n  _s = $RefreshSig$();\n// src/components/QRCodeScanner.js\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState(null);\n  const handleScan = data => {\n    if (data) {\n      setScannedData(data);\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scanned Data: \", scannedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeScanner, \"NZBLdA6JIHXPz/ynSKqLHteJoBo=\");\n_c = QRCodeScanner;\nexport default QRCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QRCodeScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","QRCodeScanner","_s","scannedData","setScannedData","handleScan","data","handleError","err","console","error","children","delay","onError","onScan","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/double-parker/src/components/QRCodeScanner.js"],"sourcesContent":["// src/components/QRCodeScanner.js\r\nimport React, { useState } from 'react';\r\nimport QrReader from 'react-qr-reader';\r\n\r\nconst QRCodeScanner = () => {\r\n  const [scannedData, setScannedData] = useState(null);\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setScannedData(data);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <QrReader\r\n        delay={300}\r\n        onError={handleError}\r\n        onScan={handleScan}\r\n        style={{ width: '100%' }}\r\n      />\r\n      {scannedData && <p>Scanned Data: {scannedData}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeScanner;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMQ,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,EAAE;MACRF,cAAc,CAACE,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,GAAG,IAAK;IAC3BC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACF,QAAQ;MACPc,KAAK,EAAE,GAAI;MACXC,OAAO,EAAEN,WAAY;MACrBO,MAAM,EAAET,UAAW;MACnBU,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDjB,WAAW,iBAAIH,OAAA;MAAAW,QAAA,GAAG,gBAAc,EAACR,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxBID,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}