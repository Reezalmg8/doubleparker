{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\double-parker\\\\src\\\\components\\\\QRCodeScanner.js\",\n  _s = $RefreshSig$();\n// src/components/QRCodeScanner.js\nimport React, { useRef, useState } from 'react';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState(null);\n  const videoRef = useRef(null);\n  const startScanning = async () => {\n    const codeReader = new BrowserMultiFormatReader();\n    try {\n      const result = await codeReader.decodeFromVideoDevice(null, videoRef.current);\n      setScannedData(result.text);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  React.useEffect(() => {\n    startScanning();\n    return () => {\n      codeReader.reset();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scanned Data: \", scannedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeScanner, \"lz5cq9ZNIWHusWFRykER/qTnp8A=\");\n_c = QRCodeScanner;\nexport default QRCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QRCodeScanner\");","map":{"version":3,"names":["React","useRef","useState","BrowserMultiFormatReader","jsxDEV","_jsxDEV","QRCodeScanner","_s","scannedData","setScannedData","videoRef","startScanning","codeReader","result","decodeFromVideoDevice","current","text","err","console","error","useEffect","reset","children","ref","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/double-parker/src/components/QRCodeScanner.js"],"sourcesContent":["// src/components/QRCodeScanner.js\r\nimport React, { useRef, useState } from 'react';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\n\r\nconst QRCodeScanner = () => {\r\n  const [scannedData, setScannedData] = useState(null);\r\n  const videoRef = useRef(null);\r\n\r\n  const startScanning = async () => {\r\n    const codeReader = new BrowserMultiFormatReader();\r\n    try {\r\n      const result = await codeReader.decodeFromVideoDevice(null, videoRef.current);\r\n      setScannedData(result.text);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    startScanning();\r\n    return () => {\r\n      codeReader.reset();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} style={{ width: '100%' }} />\r\n      {scannedData && <p>Scanned Data: {scannedData}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeScanner;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,wBAAwB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMQ,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,UAAU,GAAG,IAAIT,wBAAwB,CAAC,CAAC;IACjD,IAAI;MACF,MAAMU,MAAM,GAAG,MAAMD,UAAU,CAACE,qBAAqB,CAAC,IAAI,EAAEJ,QAAQ,CAACK,OAAO,CAAC;MAC7EN,cAAc,CAACI,MAAM,CAACG,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAEDjB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpBT,aAAa,CAAC,CAAC;IACf,OAAO,MAAM;MACXC,UAAU,CAACS,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAOkB,GAAG,EAAEb,QAAS;MAACc,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjDrB,WAAW,iBAAIH,OAAA;MAAAiB,QAAA,GAAG,gBAAc,EAACd,WAAW;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3BID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}