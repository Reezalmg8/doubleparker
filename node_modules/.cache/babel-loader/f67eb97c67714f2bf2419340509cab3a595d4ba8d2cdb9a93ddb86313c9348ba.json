{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\double-parker\\\\src\\\\pages\\\\RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px;\n`;\n_c = Container;\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 1rem;\n`;\n_c2 = Input;\nconst Button = styled.button`\n  padding: 10px;\n  font-size: 1rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin: 10px;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c3 = Button;\nconst QRCodeImage = styled.img`\n  margin-top: 20px;\n`;\n_c4 = QRCodeImage;\nconst RegistrationPage = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [userPhoneNumber, setUserPhoneNumber] = useState('');\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState('');\n  const handleRegister = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/generate-qr', {\n        userId,\n        userPhoneNumber\n      });\n      setQrCodeDataUrl(response.data.qrCodeDataUrl);\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"User ID\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      value: userPhoneNumber,\n      onChange: e => setUserPhoneNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleRegister,\n      children: \"Generate QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), qrCodeDataUrl && /*#__PURE__*/_jsxDEV(QRCodeImage, {\n      src: qrCodeDataUrl,\n      alt: \"QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"WFsB8buRvRTxoobR3aGwlBNkK/8=\");\n_c5 = RegistrationPage;\nexport default RegistrationPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"QRCodeImage\");\n$RefreshReg$(_c5, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","Button","button","_c3","QRCodeImage","img","_c4","RegistrationPage","_s","userId","setUserId","userPhoneNumber","setUserPhoneNumber","qrCodeDataUrl","setQrCodeDataUrl","handleRegister","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","_c5","$RefreshReg$"],"sources":["C:/Users/User/double-parker/src/pages/RegistrationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 10px;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nconst QRCodeImage = styled.img`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst RegistrationPage = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [userPhoneNumber, setUserPhoneNumber] = useState('');\r\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/generate-qr', { userId, userPhoneNumber });\r\n      setQrCodeDataUrl(response.data.qrCodeDataUrl);\r\n    } catch (error) {\r\n      console.error('Error generating QR code:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Register</h1>\r\n      <Input type=\"text\" placeholder=\"User ID\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n      <Input type=\"text\" placeholder=\"Phone Number\" value={userPhoneNumber} onChange={(e) => setUserPhoneNumber(e.target.value)} />\r\n      <Button onClick={handleRegister}>Generate QR Code</Button>\r\n      {qrCodeDataUrl && <QRCodeImage src={qrCodeDataUrl} alt=\"QR Code\" />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}